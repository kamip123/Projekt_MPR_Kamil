package library.repos.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import library.domain.Sprzedawca;
import library.mappers.IMapper;
import library.repos.ISprzedawcaRepository;
import library.uow.IUnitOfWork;

public class SprzedawcaRepository extends RepositoryBase<Sprzedawca> implements ISprzedawcaRepository{
	String selectNaJakiesImieSql = "SELECT * FROM sprzedawca WHERE nazwa=?";
	PreparedStatement selectNaJakiesImie;
	
	public SprzedawcaRepository(Connection connection,IMapper<Sprzedawca> mapper, IUnitOfWork uow) throws SQLException{
		super(connection,mapper, uow);
		selectNaJakiesImie = connection.prepareStatement(selectNaJakiesImieSql);
	}

	@Override
	protected String getUpdateQuerySql() {
		return "UPDATE sprzedawca SET (nazwa, prywatnaCzyFirma, telefon, adresEMail) = (?,?,?,?) WHERE id=?";
	}

	@Override
	protected String getInsertQuerySql() {
		return "INSERT INTO sprzedawca(nazwa, prywatnaCzyFirma, telefon, adresEMail) VALUES (?,?,?,?)";
	}

	@Override
	protected String getTableName() {
		return "sprzedawca";
	}

	@Override
	protected String createTableStatementSql() {
		return "CREATE TABLE sprzedawca("
		+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
		+ "nazwa varchar(20),"
		+ "prywatnaCzyFirma varchar(50),"
		+ "telefon bigint,"
		+ "adresEMail varchar(50)"
		+ ")";
	}

	@Override
	protected void setUpdate(Sprzedawca sprzedawca) throws SQLException {
		update.setString(1, sprzedawca.getNazwa());
		update.setString(2, sprzedawca.getPrywatnaCzyFirma());
		update.setInt(3, sprzedawca.getTelefon());
		update.setString(4, sprzedawca.getAdresEMail());
		update.setInt(5, sprzedawca.getId());
		
	}

	@Override
	protected void setInsert(Sprzedawca sprzedawca) throws SQLException {
		insert.setString(1, sprzedawca.getNazwa());
		insert.setString(2, sprzedawca.getPrywatnaCzyFirma());
		insert.setInt(3, sprzedawca.getTelefon());
		insert.setString(4, sprzedawca.getAdresEMail());
		
	}
	
	@Override
	public List<Sprzedawca> naJakiesImie(String name) {
		List<Sprzedawca> result = new ArrayList<Sprzedawca>();
		try {
			selectNaJakiesImie.setString(1, name);
			ResultSet rs = selectNaJakiesImie.executeQuery();
			while(rs.next()) result.add(mapper.map(rs));
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}
}
